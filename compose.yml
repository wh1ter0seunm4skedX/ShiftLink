volumes:
  mongodb_data:
    driver: local

networks:
  rocketchat_network:
    driver: bridge

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE:-latest}
    restart: always
    environment:
      MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
      MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
      ROOT_URL: http://localhost:3000
      PORT: 3000
    depends_on:
      - mongodb
    networks:
      - rocketchat_network
    ports:
      - "3000:3000"

  mongodb:
    image: docker.io/bitnami/mongodb:5.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_ENABLE_JOURNAL: true
      ALLOW_EMPTY_PASSWORD: yes
    networks:
      - rocketchat_network

  node-api:
    image: node:16
    volumes:
      - ./node-api:/usr/src/app 
    working_dir: /usr/src/app
    command: ["npx", "nodemon", "--legacy-watch", "app.js"]  # Updated to use app.js
    ports:
      - "4000:4000"
    depends_on:
      - rocketchat
    networks:
      - rocketchat_network
      
  # nginx:
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - rocketchat
  #   networks:
  #     - rocketchat_network



  # mongo-express:
  #   image: mongo-express:latest
  #   restart: always
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER: mongodb
  #     ME_CONFIG_MONGODB_PORT: 27017
  #     ME_CONFIG_MONGODB_AUTH_DATABASE: admin
  #     ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: password
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - rocketchat_network
